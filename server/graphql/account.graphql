# import BPInfo from "./bp.graphql"
# import PageInfo from "./pagination.graphql"

type Permission {
  actor: String
  permission: String
}
type Accounts {
  permission: Permission
  weight: Int
}
type NetLimit {
  used: Int
  available: Int
  max: Int
}
type RequiredAuth {
  threshold: Int
  keys: [String]
  accounts: [Accounts]!
  waits: [String]
}
type Permissions {
  permName: String
  parent: String
  requiredAuth: RequiredAuth
}
type SelfDelegatedBandwidth {
  from: String
  to: String
  netWeight: Int
  cpuWeight: Int
}
type TotalResources {
  owner: String
  netWeight: Int
  cpuWeight: Int
  ramBytes: Int
}
type VoterInfo {
  owner: String
  proxy: String
  producers: [String]!
  staked: Int
  lastVoteWeight: String
  proxiedVoteWeight: String
  isProxy: Int
  unstaking: Int
}
type Account {
  producerInfo: BPInfo

  tokenBalance: String
  accountName: String
  headBlockNum: Int
  headBlockTime: String
  privileged: Boolean
  lastCodeUpdate: String
  created: String
  coreLiquidBalance: String
  ramQuota: Int
  netWeight: Int
  cpuWeight: Int
  netLimit: NetLimit
  cpuLimit: NetLimit
  ramUsage: Int
  permissions: [Permissions]!
  totalResources: TotalResources
  selfDelegatedBandwidth: SelfDelegatedBandwidth
  refundRequest: String
  voterInfo: VoterInfo
}
type AccountsList {
  accounts: [Account!]
  pageInfo: PageInfo
}

type NameAuction {
  newName: String
  highBidder: String
  highBid: Int
  lastBidTime: String
}
type NameAuctionsList {
  nameAuctions: [NameAuction!]
  pageInfo: PageInfo
}
